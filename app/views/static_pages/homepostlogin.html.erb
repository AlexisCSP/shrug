
<!DOCTYPE html>
<html>

<p>

<head>
    <style>
      #map {
        height: 500px;
        width: 60%;
       }

    </style>
  </head>
  <div class="parallax-p6" style= "margin-top: -10px;">
<body>

<div style= "padding-top:15px; overflow:auto;">
<div class="map+chat">
    <div id="map">
    <script>
    	 var map, infoWindow;

       var savePosition = function(position) {
         $.ajax({
           type:'POST',
           url:'/update_latlng',
           data: {'latitude': position.lat,
                  'longitude': position.lng},
              success:function(){

            }
          });
        }

        var openChatRoom = function(id) {
          var url = "/chat_rooms/" + id;
          window.location.replace(url);
        }

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 6
        });

        infoWindow = new google.maps.InfoWindow;

        //geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {

            // obtain locations of chatrooms longitude-latitude organized

            var locations = <%= raw @chat_rooms_information.to_json %>

            // Origins, anchor positions and coordinates of the marker increase in the X
            // direction to the right and in the Y direction down.
            var image = {
              url: "<%= asset_path('chat-icon.png') %>",
              // The origin for this image is (0, 0).
              origin: new google.maps.Point(0, 0)
            };

            var shape = {
              coords: [1, 1, 1, 30, 30, 30, 30, 5, 5, 5, 1, 1],
              type: 'poly'
            };
            var markers=[];

            //for each location, put marker at lat and lng if its inside the circle
            for (i = 0; i < locations.length; i++) {
              var p = new google.maps.LatLng(locations[i][2], locations[i][3]);
              marker = new google.maps.Marker({
              position: p,
              icon: image,
              shape: shape,
              title: locations[i][1],
              map: map
              });

              marker['id'] = locations[i][0];
              markers.push(marker);
            }

            // set geolocation pin
              var pos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
              };

            for (i = 0; i < markers.length; i++) {
              var marker = markers[i];
              var isMarkerInsideBound = isDistanceBetweenPointsLessThanBound(marker.getPosition().lat(), marker.getPosition().lng(), pos.lat, pos.lng);

              if (isMarkerInsideBound) {
                  marker.addListener('click', function () {
                  openChatRoom(this.id);
                });
              }
            }

            map.setCenter(pos);

            var marker = new google.maps.Marker({
              position: pos,
              title:"You are here!"
            });

            //radius around user's location
            var circle = new google.maps.Circle({ radius: 1000, map:map, fillColor: '#38891b', fillOpacity: 0.4, strokeColor: '#5e5e5e', strokeWeight: 1});
            circle.bindTo('center', marker, 'position');

            //set user location marker, move view to user location, zoom in
      	    marker.setMap(map);
      	    map.setZoom(16);
  			    map.panTo(pos);

            savePosition(pos);
            var markerCluster = new MarkerClusterer(map, markers, {gridSize:40, maxZoom: 18, imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});

          },function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });

        } else { //cant get geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }


      function downloadUrl(url, callback) {
        var request = window.ActiveXObject ?
            new ActiveXObject('Microsoft.XMLHTTP') :
            new XMLHttpRequest;

        request.onreadystatechange = function() {
          if (request.readyState == 4) {
            request.onreadystatechange = doNothing;
            callback(request.responseText, request.status);
          }
        };
    }

    function isDistanceBetweenPointsLessThanBound(lat1, lon1, lat2, lon2) {
      return (haversineDistance(lat1, lon1, lat2, lon2) < 1);
    }

    function haversineDistance(lat1, lon1, lat2, lon2) {
      function toRad(x) {
        return x * Math.PI / 180;
      }

      var R = 6371; // km

      var x1 = lat2 - lat1;
      var dLat = toRad(x1);
      var x2 = lon2 - lon1;
      var dLon = toRad(x2)
      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *
      Math.sin(dLon / 2) * Math.sin(dLon / 2);
      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      var d = R * c;

      return d;
    }

    </script>
</div>

<!--marker options-->

    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAt4_0BPK9TgwPMo3mI-dz6v8Mg1MW-8n0&callback=initMap">
    </script>

<!--chatroom box -->
  <div class="tab">

  <button class="tablinks" onclick="opentab(event, 'NearbyChatRooms')" id= "startopen"><strong>Nearby Chat Rooms</strong></button>
  <button class="tablinks" onclick="opentab(event, 'NearbyPeople')"><strong>Nearby People</strong></button>

  <div id= "NearbyChatRooms" class="tabcontent">
	<%=render @chat_rooms%>
  </div>

  <div id= "NearbyPeople" class= "tabcontent">
  Users

  </div>

</div>

</div>
<script>
document.getElementById("startopen").click();

 function opentab(event, type){
   var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(type).style.display = "block";
    event.currentTarget.className += " active";
}

</script>
</div>

<!-- The Modal -->
<button  id="Btn">Create a room!</button>

	<div id="Modal" class="modal">

		<div class="modal-content">
		    <span class="close">&times;</span> <br>


        <div class="row">
          <div class="col-md-6 col-md-offset-3">
            <%= form_for(@chat_room, url: new_chatroom_path) do |f| %>

              <%= f.label :title %>
            	<%= f.text_field :title, autofocus: true, class: 'form-control' %>

        		  <%= f.label :description %>
            	<%= f.text_area :description, rows: "5", autofocus: true, class: 'form-control' %>

              <%= f.hidden_field :latitude, value: current_user.latitude %>
              <%= f.hidden_field :longitude, value: current_user.longitude %>

              <%= f.hidden_field :user_id, value: current_user.id %>
              <%= f.submit "Create Chat Room", class: "btn btn-primary" %>
            <% end %>
          </div>
        </div>


		</div>

	</div>


<script>

// Get the modal
var modal = document.getElementById('Modal');

// Get the button that opens the modal
var btn = document.getElementById("Btn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
    modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}
</script>


</body>
</p>
</div>


</html>
